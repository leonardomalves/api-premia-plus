{
	"info": {
		"_postman_id": "u1s2e3r4-a5u6-7890-auth-123456789012",
		"name": "Pr√™mia Club - Users & Authentication",
		"description": "API de usu√°rios, autentica√ß√£o e perfis do sistema Pr√™mia Club.\n\n## Funcionalidades\n- Autentica√ß√£o com Sanctum (Bearer tokens)\n- Gest√£o de perfis de usu√°rio\n- Sistema de sponsors e refer√™ncias\n- Valida√ß√£o de permiss√µes (admin, customer)\n\n## Autentica√ß√£o\nTodos os endpoints protegidos requerem:\n```\nAuthorization: Bearer {token}\n```\n\n## Dom√≠nios Relacionados\n- Subscribers (leads que se tornam users)\n- Commissions (estrutura de sponsors)\n- Orders & Wallets (transa√ß√µes dos usu√°rios)",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "12345678"
	},
	"item": [
		{
			"name": "üîê Authentication",
			"item": [
				{
					"name": "Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response has token\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('status', 'success');",
									"    pm.expect(jsonData.data).to.have.property('token');",
									"    pm.expect(jsonData.data).to.have.property('user');",
									"});",
									"",
									"pm.test(\"Store auth token\", function () {",
									"    var jsonData = pm.response.json();",
									"    if (jsonData.data && jsonData.data.token) {",
									"        pm.environment.set(\"auth_token\", jsonData.data.token);",
									"        pm.environment.set(\"user_uuid\", jsonData.data.user.uuid);",
									"    }",
									"});",
									"",
									"pm.test(\"Response time is less than 1000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"{{admin_email}}\",\n  \"password\": \"{{admin_password}}\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v1/auth/login",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"login"
							]
						}
					},
					"response": [
						{
							"name": "200 - Login Successful",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"email\": \"admin@premiaclub.com.br\",\n  \"password\": \"password123\"\n}"
								},
								"url": {
									"raw": "{{base_url}}/api/v1/auth/login",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"v1",
										"auth",
										"login"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": \"success\",\n  \"message\": \"Login realizado com sucesso.\",\n  \"data\": {\n    \"user\": {\n      \"uuid\": \"123e4567-e89b-12d3-a456-426614174000\",\n      \"name\": \"Administrador\",\n      \"email\": \"admin@premiaclub.com.br\",\n      \"role\": \"admin\"\n    },\n    \"token\": \"1|abcdef123456789...\",\n    \"expires_at\": \"2024-11-30T14:30:00.000000Z\"\n  },\n  \"meta\": {\n    \"execution_time_ms\": 45.23\n  }\n}"
						}
					]
				},
				{
					"name": "Register",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"User created successfully\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('status', 'success');",
									"    pm.expect(jsonData.data).to.have.property('user');",
									"    pm.expect(jsonData.data).to.have.property('token');",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// Generate random email to avoid duplicates",
									"const timestamp = Date.now();",
									"const randomEmail = `user${timestamp}@premiaclub.com.br`;",
									"pm.environment.set(\"register_email\", randomEmail);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Novo Usu√°rio\",\n  \"email\": \"{{register_email}}\",\n  \"password\": \"password123\",\n  \"password_confirmation\": \"password123\",\n  \"phone\": \"11999887766\",\n  \"sponsor_code\": \"{{sponsor_code}}\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v1/auth/register",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "Logout",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Logout successful\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('status', 'success');",
									"});",
									"",
									"pm.test(\"Clear auth token\", function () {",
									"    pm.environment.unset(\"auth_token\");",
									"    pm.environment.unset(\"user_uuid\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/auth/logout",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"logout"
							]
						}
					},
					"response": []
				}
			],
			"description": "Endpoints de autentica√ß√£o e gest√£o de sess√µes."
		},
		{
			"name": "üë§ User Profile",
			"item": [
				{
					"name": "Get Profile",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Profile data structure\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('status', 'success');",
									"    pm.expect(jsonData.data).to.have.property('user');",
									"    pm.expect(jsonData.data.user).to.have.property('uuid');",
									"    pm.expect(jsonData.data.user).to.have.property('name');",
									"    pm.expect(jsonData.data.user).to.have.property('email');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/customer/profile",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"customer",
								"profile"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Profile",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Profile updated successfully\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('status', 'success');",
									"    pm.expect(jsonData.data).to.have.property('user');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Nome Atualizado\",\n  \"phone\": \"11988776655\",\n  \"bio\": \"Biografia atualizada do usu√°rio\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v1/customer/profile",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"customer",
								"profile"
							]
						}
					},
					"response": []
				}
			],
			"description": "Gest√£o de perfil do usu√°rio autenticado."
		},
		{
			"name": "üîß Admin - User Management",
			"item": [
				{
					"name": "List Users",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Users list structure\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('status', 'success');",
									"    pm.expect(jsonData.data).to.have.property('users');",
									"    pm.expect(jsonData.data.users).to.have.property('data');",
									"    pm.expect(jsonData.data.users).to.have.property('meta');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/administrator/users?page=1&per_page=15",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"administrator",
								"users"
							],
							"query": [
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "per_page",
									"value": "15"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get User Details",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"User details structure\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('status', 'success');",
									"    pm.expect(jsonData.data).to.have.property('user');",
									"    pm.expect(jsonData.data.user).to.have.property('uuid');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/administrator/users/{{user_uuid}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"administrator",
								"users",
								"{{user_uuid}}"
							]
						}
					},
					"response": []
				}
			],
			"description": "Endpoints administrativos para gest√£o de usu√°rios. Requer permiss√£o de admin."
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"// Global pre-request script",
					"pm.request.headers.add({",
					"    key: 'Accept',",
					"    value: 'application/json'",
					"});",
					"",
					"// Set default base URL if not set",
					"if (!pm.environment.get(\"base_url\")) {",
					"    pm.environment.set(\"base_url\", \"http://localhost:8000\");",
					"}"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					"// Global test script",
					"pm.test(\"Response is JSON\", function () {",
					"    pm.response.to.be.json;",
					"});",
					"",
					"pm.test(\"No server errors (5xx)\", function () {",
					"    pm.expect(pm.response.code).to.be.below(500);",
					"});"
				]
			}
		}
	],
	"variable": [
		{
			"key": "domain",
			"value": "users",
			"type": "string"
		}
	]
}